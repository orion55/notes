{"version":3,"sources":["components/Card/styles.module.css","containers/AddButton/styles.module.css","libs/misc.js","slices/itemsSlice.js","components/CardItem/index.js","slices/curItemSlice.js","containers/CardList/index.js","selector/item.js","components/Card/index.js","containers/AddButton/index.js","app/App.js","store/store.js","serviceWorker.js","index.js","components/CardItem/styles.module.css","app/styles.module.css","containers/CardList/styles.module.css"],"names":["module","exports","count","makeText","length","result","characters","charactersLength","i","charAt","Math","floor","random","itemsSlice","createSlice","name","initialState","Array","keys","map","item","id","uniqueId","title","desc","reducers","add","state","action","payload","remove","change","clear","actions","selectItems","cardItems","cx","classNames","bind","styles","CardItem","props","active","onClick","onRemove","classNameCard","carditem","carditem__active","className","onKeyPress","role","tabIndex","aria-label","carditem__title","icon","faTimesCircle","carditem__icon","size","curItemSlice","setItem","clearItem","selectCurItem","curItem","CardList","useSelector","dispatch","useDispatch","cardlist","isEmpty","cardlist__nodata","event","preventDefault","stopPropagation","console","log","getCurItem","createSelector","items","find","Card","curId","useState","setTitle","setDesc","useEffect","debounceChange","useCallback","debounce","newId","newTitle","newDesc","card","type","value","onChange","target","card__title","placeholder","card__desc","card__nodata","AddButton","abbbtn__wrap","addbtn","faPlus","addbtn__icon","addbtn__text","App","app","app__column","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46db9e64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__wJOyK\",\"card__title\":\"styles_card__title__24GZR\",\"card__desc\":\"styles_card__desc__13Pt_\",\"card__nodata\":\"styles_card__nodata__S4lKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addbtn\":\"styles_addbtn__3rsj9\",\"addbtn-hover\":\"styles_addbtn-hover__2Xcsp\",\"abbbtn__wrap\":\"styles_abbbtn__wrap__33rF7\",\"addbtn__text\":\"styles_addbtn__text__2N0jY\",\"addbtn__icon\":\"styles_addbtn__icon__yDgof\"};","import uniqueId from 'lodash/uniqueId';\r\n\r\nconst makeText = (length) => {\r\n  let result = '';\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i += 1) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const generateItems = (count) => {\r\n  if (!count && count <= 0) return null;\r\n  return [...Array(count).keys()].map((item) => ({\r\n    id: +uniqueId(),\r\n    title: makeText(10),\r\n    desc: makeText(300),\r\n  }));\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport find from 'lodash/find';\r\nimport { generateItems } from '../libs/misc';\r\n\r\nexport const itemsSlice = createSlice({\r\n  name: 'cardItems',\r\n  initialState: generateItems(10) || [],\r\n  // initialState: [],\r\n  reducers: {\r\n    add: (state, action) => action.payload,\r\n    remove: (state, action) => {},\r\n    change: (state, action) => state.map((item) => {\r\n      if (item.id === action.payload.id) {\r\n        return action.payload;\r\n      }\r\n      return item;\r\n    }),\r\n    clear: () => [],\r\n  },\r\n});\r\n\r\nexport const {\r\n  add, remove, change, clear,\r\n} = itemsSlice.actions;\r\n\r\nexport const selectItems = (state) => state.cardItems;\r\n\r\nexport default itemsSlice.reducer;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './styles.module.css';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction CardItem(props) {\r\n  const {\r\n    title = '', active = false, onClick, onRemove,\r\n  } = props;\r\n\r\n  const classNameCard = cx({\r\n    carditem: true,\r\n    carditem__active: active,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={classNameCard}\r\n      onClick={onClick}\r\n      onKeyPress={onClick}\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      aria-label=\"0\"\r\n    >\r\n      <div className={styles.carditem__title}>\r\n        {title || 'Untitled'}\r\n      </div>\r\n      <FontAwesomeIcon icon={faTimesCircle} className={styles.carditem__icon} size=\"1x\" onClick={onRemove} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const curItemSlice = createSlice({\r\n  name: 'curItem',\r\n  initialState: null,\r\n  reducers: {\r\n    setItem: (state, action) => action.payload,\r\n    clearItem: () => null,\r\n  },\r\n});\r\n\r\nexport const {\r\n  setItem, clearItem,\r\n} = curItemSlice.actions;\r\n\r\nexport const selectCurItem = (state) => state.curItem;\r\n\r\nexport default curItemSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { selectItems } from '../../slices/itemsSlice';\r\nimport styles from './styles.module.css';\r\nimport CardItem from '../../components/CardItem';\r\nimport { selectCurItem, setItem } from '../../slices/curItemSlice';\r\n\r\nfunction CardList() {\r\n  const cardItems = useSelector(selectItems);\r\n  const curItem = useSelector(selectCurItem);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (event, id) => {\r\n    event.preventDefault();\r\n    dispatch(setItem(id));\r\n  };\r\n\r\n  const onRemove = (event, id) => {\r\n    event.stopPropagation();\r\n    console.log(`remove: ${id}`);\r\n  };\r\n\r\n  const getCardsList = () => cardItems.map((item) => (\r\n    <CardItem\r\n      key={item.id}\r\n      {...item}\r\n      onClick={(event) => onClick(event, item.id)}\r\n      onRemove={(event) => onRemove(event, item.id)}\r\n      active={item.id === curItem}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.cardlist}>\r\n      {isEmpty(cardItems) ? (<div className={styles.cardlist__nodata}>No data found</div>) : getCardsList()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import { createSelector } from 'reselect';\r\nimport find from 'lodash/find';\r\n\r\nexport const getCurItem = createSelector(\r\n  (state) => state.cardItems,\r\n  (state) => state.curItem,\r\n  (items, id) => items && find(items, { id }),\r\n);\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport debounce from 'lodash/debounce';\r\nimport styles from './styles.module.css';\r\nimport { selectCurItem } from '../../slices/curItemSlice';\r\nimport { getCurItem } from '../../selector/item';\r\nimport { change } from '../../slices/itemsSlice';\r\n\r\nconst DEBOUNCE_TIME = 500;\r\n\r\nfunction Card() {\r\n  const curId = useSelector(selectCurItem);\r\n  const curItem = useSelector(getCurItem);\r\n  const dispatch = useDispatch();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (curItem) {\r\n      setTitle(curItem.title);\r\n      setDesc(curItem.desc);\r\n    }\r\n  }, [curItem]);\r\n\r\n  const debounceChange = useCallback(debounce((newId, newTitle, newDesc) => {\r\n    dispatch(change({ id: newId, title: newTitle, desc: newDesc }));\r\n  }, DEBOUNCE_TIME), [dispatch, change]);\r\n\r\n  const handleTitleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTitle(value);\r\n    debounceChange(curId, value, desc);\r\n  };\r\n\r\n  const handleDescChange = (event) => {\r\n    const { value } = event.target;\r\n    setDesc(value);\r\n    debounceChange(curId, title, value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      {(!curId) ? (\r\n        <div className={styles.card__nodata}>\r\n          No data found\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n            className={styles.card__title}\r\n            placeholder=\"Название\"\r\n          />\r\n          <textarea\r\n            value={desc}\r\n            onChange={handleDescChange}\r\n            className={styles.card__desc}\r\n            placeholder=\"Наберите текст\"\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './styles.module.css';\r\n\r\nfunction AddButton() {\r\n  return (\r\n    <div className={styles.abbbtn__wrap}>\r\n      <button className={styles.addbtn}>\r\n        <FontAwesomeIcon icon={faPlus} className={styles.addbtn__icon} size=\"1x\" />\r\n        <div className={styles.addbtn__text}>New note</div>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddButton;\r\n","import React from 'react';\r\nimport styles from './styles.module.css';\r\nimport CardList from '../containers/CardList';\r\nimport Card from '../components/Card';\r\nimport AddButton from '../containers/AddButton';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.app}>\r\n      <div className={styles.app__column}>\r\n        <AddButton />\r\n        <CardList />\r\n      </div>\r\n      <Card />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport itemsSlice from '../slices/itemsSlice';\r\nimport curItemSlice from '../slices/curItemSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cardItems: itemsSlice,\r\n    curItem: curItemSlice,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the store load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web store is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different store. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './app/App';\r\nimport store from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your store to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carditem\":\"styles_carditem__2cdcw\",\"carditem-hover\":\"styles_carditem-hover__3n9rY\",\"abbbtn__wrap\":\"styles_abbbtn__wrap__1yWJV\",\"carditem__title\":\"styles_carditem__title__3Og9c\",\"carditem__icon\":\"styles_carditem__icon__-1zWQ\",\"carditem__active\":\"styles_carditem__active__3wZJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__3fILm\",\"app__column\":\"styles_app__column__vNeQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardlist\":\"styles_cardlist__2njej\",\"cardlist__nodata\":\"styles_cardlist__nodata__sDWDp\"};"],"sourceRoot":""}